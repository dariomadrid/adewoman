---
import Layout from "../../../layouts/Layout.astro";
import Navbar from "../../../components/Navbar.vue";
import { portfolioItems } from "../../../content/portfolio.js";

export async function getStaticPaths() {
  return portfolioItems.map((item) => ({
    params: { id: item.id },
    props: { item },
  }));
}

const { item } = Astro.props;
const currentLang = 'es';
const pageTitle = `${item.title} - Portafolio - ABE Wild`;
---

<Layout title={pageTitle}>
  <div class="min-h-screen bg-light" data-lang="es">
    <Navbar client:load lang="es" />
    
    <!-- Quadricular Grid Layout -->
    <main class="pt-24 px-6 py-12">
      <div class="max-w-7xl mx-auto">

        <!-- Modern Quadricular Grid (2x2) - Better Design -->
        <div class="grid grid-cols-1 lg:grid-cols-2 min-h-[85vh] overflow-hidden rounded-3xl shadow-2xl bg-white">
          
          <!-- Top Left: Hero & Description - Modern Gradient -->
          <div class="relative p-16 bg-gradient-to-br from-primary via-primary/90 to-tertiary text-white overflow-hidden group">
            <!-- Animated background elements -->
            <div class="absolute -top-20 -right-20 w-40 h-40 bg-accent/20 rounded-full blur-3xl group-hover:scale-110 transition-transform duration-700"></div>
            <div class="absolute -bottom-10 -left-10 w-32 h-32 bg-accent/30 rounded-full blur-2xl group-hover:scale-125 transition-transform duration-500"></div>
            
            <!-- Leopard pattern with better opacity -->
            <div class="absolute inset-0 opacity-[0.03] group-hover:opacity-[0.05] transition-opacity duration-500" 
                 style="background-image: url('/leopard-pattern.png'); background-size: 80px; background-repeat: repeat;"></div>
            
            <div class="relative z-10 h-full flex flex-col">
              <!-- Large impactful title -->
              <div class="mb-8">
                <h1 class="text-5xl lg:text-6xl font-chillax font-bold mb-4 leading-tight">
                  {item.title}
                </h1>
                <p class="text-2xl text-accent font-light">{item.subtitle}</p>
              </div>
              
              <!-- Tags with modern styling -->
              <div class="flex-grow">                
                <div class="flex flex-wrap gap-3">
                  {item.tags.map((tag: string) => (
                    <span class="px-4 py-2 bg-accent/20 backdrop-blur-sm text-accent border border-accent/30 rounded-full text-sm font-medium hover:bg-accent/30 transition-colors duration-300">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <!-- Top Right: Featured Characteristics - Clean Modern -->
          <div class="relative p-16 bg-gradient-to-br from-light to-accent/20 overflow-hidden group">
            <!-- Subtle geometric patterns -->
            <div class="absolute top-0 right-0 w-64 h-64 bg-accent/10 rounded-full -translate-y-32 translate-x-32 group-hover:scale-110 transition-transform duration-700"></div>
            <div class="absolute bottom-0 left-0 w-48 h-48 bg-tertiary/10 rounded-full translate-y-24 -translate-x-24 group-hover:scale-125 transition-transform duration-500"></div>
            
            <div class="relative z-10 h-full flex flex-col">
              <h2 class="text-3xl font-chillax font-bold text-primary mb-8">Características Destacadas</h2>
              
              <!-- Project Details in cards -->
              <div class="space-y-6 mb-8">
                <div class="group/card bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-accent/20 hover:border-accent/40">
                  <div class="flex items-center mb-3">
                    <div class="w-3 h-3 bg-primary rounded-full mr-3"></div>
                    <h3 class="font-bold text-primary text-sm uppercase tracking-wider">Cliente</h3>
                  </div>
                  <p class="text-primary font-semibold text-xl">{item.client}</p>
                </div>
                
                <div class="group/card bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-accent/20 hover:border-accent/40">
                  <div class="flex items-center mb-3">
                    <div class="w-3 h-3 bg-tertiary rounded-full mr-3"></div>
                    <h3 class="font-bold text-primary text-sm uppercase tracking-wider">Año</h3>
                  </div>
                  <p class="text-primary font-semibold text-xl">{item.year}</p>
                </div>
                
                {item.duration && (
                  <div class="group/card bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-accent/20 hover:border-accent/40">
                    <div class="flex items-center mb-3">
                      <div class="w-3 h-3 bg-accent-green rounded-full mr-3"></div>
                      <h3 class="font-bold text-primary text-sm uppercase tracking-wider">Duración</h3>
                    </div>
                    <p class="text-primary font-semibold text-xl">{item.duration}</p>
                  </div>
                )}
              </div>

              <!-- Services with modern badges -->
              <div class="mt-8">
                <h3 class="text-xl font-bold text-primary mb-6 flex items-center">
                  <svg class="w-6 h-6 mr-3 text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  Servicios
                </h3>
                <div class="flex flex-wrap gap-3">
                  {item.services.map((service: string) => (
                    <span class="px-5 py-3 bg-gradient-to-r from-tertiary to-tertiary-hover text-white rounded-full text-sm font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-300">
                      {service}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <!-- Bottom Left: Services - Modern Badges -->
          <div class="relative p-16 bg-gradient-to-br from-accent to-accent-dark overflow-hidden group">
            <!-- Organic flowing shapes -->
            <div class="absolute inset-0 opacity-20">
              <svg viewBox="0 0 400 400" class="w-full h-full">
                <path d="M100,200 Q200,100 300,200 T500,200" stroke="currentColor" stroke-width="2" fill="none" class="text-primary/20"/>
                <path d="M0,300 Q200,200 400,300" stroke="currentColor" stroke-width="1" fill="none" class="text-primary/10"/>
              </svg>
            </div>
            
            <div class="relative z-10 h-full flex flex-col">
              <h2 class="text-3xl font-chillax font-bold text-primary mb-8 flex items-center">
                <svg class="w-8 h-8 mr-4 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                Servicios
              </h2>
              
              <!-- Services with modern badges -->
              <div class="space-y-6 flex-grow">
                <div class="flex flex-wrap gap-4">
                  {item.services.map((service: string) => (
                    <div class="group/service bg-white/90 backdrop-blur-sm rounded-2xl px-6 py-4 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
                      <span class="text-primary font-semibold text-lg">{service}</span>
                    </div>
                  ))}
                </div>                                
              </div>
            </div>
          </div>

          <!-- Bottom Right: Gallery & Features - Interactive -->
          <div class="relative p-16 bg-gradient-to-br from-slate-50 to-white overflow-hidden group">
            <!-- Dynamic grid background -->
            <div class="absolute inset-0 opacity-[0.02] group-hover:opacity-[0.04] transition-opacity duration-500" 
                 style="background-image: radial-gradient(circle at 2px 2px, rgba(92, 59, 30, 0.3) 1px, transparent 0); background-size: 24px 24px;"></div>
            
            <div class="relative z-10 h-full flex flex-col">
              <h2 class="text-3xl font-chillax font-bold text-primary mb-8 flex items-center">
                <svg class="w-8 h-8 mr-4 text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                Galería
              </h2>
              
              <!-- Gallery section -->
              <div class="mb-8">
                {item.gallery && item.gallery.length > 0 ? (
                  <div class="grid grid-cols-2 gap-4">
                    {item.gallery.slice(0, 4).map((image, index) => (
                      <div class="group/img bg-gradient-to-br from-accent/10 to-accent/20 rounded-2xl aspect-square overflow-hidden cursor-pointer hover:from-accent/20 hover:to-accent/30 transition-all duration-300 gallery-item shadow-lg hover:shadow-xl transform hover:-translate-y-1" data-image={image}>
                        <img 
                          src={image} 
                          alt={`${item.title} - Imagen ${index + 1}`}
                          class="w-full h-full object-cover group-hover/img:scale-110 transition-transform duration-500"
                          loading="lazy"
                        />
                      </div>
                    ))}
                  </div>
                ) : (
                  <div class="bg-gradient-to-br from-accent/5 to-accent/10 rounded-2xl border-2 border-dashed border-accent/30 p-8 text-center">
                    <svg class="w-16 h-16 mx-auto mb-4 text-accent/50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                    </svg>
                    <p class="text-primary/60">Galería en desarrollo</p>
                  </div>
                )}
              </div>

              <!-- Technologies with modern badges -->
              {item.tags && (
                <div class="mt-auto">
                  <h3 class="text-lg font-bold text-primary mb-4 flex items-center">
                    <svg class="w-5 h-5 mr-3 text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z"/>
                    </svg>
                    Tecnologías
                  </h3>
                  <div class="flex flex-wrap gap-3">
                    {item.tags.map((tag: string) => (
                      <span class="px-4 py-2 bg-gradient-to-r from-accent to-accent-hover text-primary rounded-full text-sm font-semibold shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-300">
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        <!-- Bottom CTA Section -->
        <div class="mt-16 text-center bg-gradient-to-r from-accent to-accent-dark rounded-2xl p-12">
          <h2 class="text-3xl font-bold text-primary mb-4">¿Te inspira este proyecto?</h2>
          <p class="text-primary/80 mb-8 max-w-2xl mx-auto text-lg">
            Si tienes una visión similar o quieres explorar nuevas posibilidades para tu marca, hablemos sobre cómo podemos hacer realidad tu proyecto.
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a 
              href="/es/#contact" 
              class="btn-primary px-8 py-4 rounded-full font-semibold text-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1"
            >
              Empezar mi proyecto
            </a>
            <a 
              href="/es/portfolio" 
              class="btn-outline px-8 py-4 rounded-full font-semibold text-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1"
            >
              Ver más trabajos
            </a>
          </div>
        </div>
        
      </div>
    </main>
  </div>
</Layout>

<script>
  // Gallery lightbox functionality
  document.addEventListener('DOMContentLoaded', function() {
    const galleryItems = document.querySelectorAll('.gallery-item');
    
    galleryItems.forEach(item => {
      item.addEventListener('click', function() {
        const imageUrl = this.getAttribute('data-image');
        if (imageUrl) {
          // Create lightbox
          const lightbox = document.createElement('div');
          lightbox.className = 'fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 cursor-pointer p-4';
          lightbox.innerHTML = `
            <div class="relative max-w-4xl max-h-full">
              <img src="${imageUrl}" alt="Gallery image" class="max-w-full max-h-full object-contain rounded-lg shadow-2xl">
              <button class="absolute top-4 right-4 text-white hover:text-gray-300 transition-colors duration-300">
                <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
              </button>
            </div>
          `;
          
          lightbox.addEventListener('click', function(e) {
            if (e.target === lightbox || e.target.closest('button')) {
              document.body.removeChild(lightbox);
            }
          });
          
          document.body.appendChild(lightbox);
        }
      });
    });
  });
</script>

<style>
  .portfolio-title {
    font-family: 'Chillax', 'Synonym Variable', ui-sans-serif, system-ui, sans-serif;
  }
  
  .gallery-item:hover {
    transform: translateY(-2px);
  }
</style>