---
import Layout from '../../../layouts/Layout.astro';
import Navbar from '../../../components/Navbar.vue';
import Lightbox from '../../../components/Lightbox.vue';
import { portfolioItems } from '../../../content/portfolio.js';
import siteConfig, { getPageTitle } from '../../../config/site.js';

export async function getStaticPaths() {
  return portfolioItems.map(item => ({
    params: { id: item.id },
    props: { item }
  }));
}

const { item } = Astro.props;
---

<Layout title={getPageTitle(item.title)}>
  <!-- Navbar -->
  <Navbar client:load />
  
  <main class="portfolio-detail overflow-x-hidden">
    <!-- Hero Header Section -->
    <section class="hero-header bg-gradient-to-br from-gray-50 to-white py-16 sm:py-24 lg:py-32 px-4 sm:px-6">
      <div class="max-w-6xl mx-auto">        
        <!-- Main Image -->
        <div class="relative">
          <img 
            src={item.image} 
            alt={`${item.title} - Projecte principal`}
            class="w-full h-64 sm:h-80 md:h-96 lg:h-[500px] object-cover rounded-xl shadow-2xl"
            onerror="this.src='/portfolio/work1.jpg'"
          />
        </div>
      </div>
    </section>

    <!-- Project Details -->
    <section class="py-12 sm:py-16 lg:py-20 px-4 sm:px-6 bg-white">
      <div class="max-w-4xl mx-auto">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 sm:gap-12 lg:gap-16">
          <!-- Project Stats -->
          <div class="lg:col-span-2">
            <h3 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 text-primary">Detalls del Projecte</h3>
            <div class="grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-6">
              <div>
                <h4 class="font-medium text-primary mb-1 sm:mb-2 text-sm sm:text-base">Client</h4>
                <p class="text-accent-hover text-sm sm:text-base">{item.client}</p>
              </div>
              <div>
                <h4 class="font-medium text-primary mb-1 sm:mb-2 text-sm sm:text-base">Serveis</h4>
                <p class="text-accent-hover text-sm sm:text-base">{item.services.join(', ')}</p>
              </div>
              <div>
                <h4 class="font-medium text-primary mb-1 sm:mb-2 text-sm sm:text-base">Durada</h4>
                <p class="text-accent-hover text-sm sm:text-base">{item.duration}</p>
              </div>
              <div>
                <h4 class="font-medium text-primary mb-1 sm:mb-2 text-sm sm:text-base">Any</h4>
                <p class="text-accent-hover text-sm sm:text-base">{item.year}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Image Gallery -->
    <section class="py-12 sm:py-16 lg:py-20 px-4 sm:px-6 bg-gray-50">
      <div class="max-w-6xl mx-auto">
        <h2 class="text-2xl sm:text-3xl font-bold text-center mb-8 sm:mb-12 text-primary">Galeria del Projecte</h2>
        
        {item.gallery && item.gallery.length > 0 ? (
          <div id="gallery-container" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8">
            {item.gallery.map((imageUrl, index) => (
              <div 
                class="relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 group cursor-pointer gallery-item"
                data-gallery-index={index}
              >
                <img 
                  src={imageUrl}
                  alt={`${item.title} - Imatge ${index + 1}`}
                  class="w-full h-48 sm:h-56 lg:h-64 object-cover group-hover:scale-105 transition-transform duration-300"
                  onerror="this.src='/portfolio/work1.jpg'"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <!-- Zoom icon overlay -->
                <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <div class="w-12 h-12 sm:w-16 sm:h-16 bg-black bg-opacity-60 backdrop-blur-sm rounded-full flex items-center justify-center text-white shadow-lg border-2 border-white/30">
                    <svg class="w-6 h-6 sm:w-8 sm:h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"/>
                    </svg>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div class="text-center py-8 sm:py-12">
            <div class="max-w-md mx-auto">
              <img 
                src={item.image}
                alt={`${item.title} - Imatge principal`}
                class="w-full h-64 sm:h-80 object-cover rounded-lg shadow-lg mb-4 sm:mb-6"
                onerror="this.src='/portfolio/work1.jpg'"
              />
              <p class="text-accent-hover text-sm sm:text-base">Galeria d'imatges en desenvolupament per aquest projecte.</p>
            </div>
          </div>
        )}
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-12 sm:py-16 lg:py-20 px-4 sm:px-6 bg-accent light-bg-pattern">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-2xl sm:text-3xl font-bold mb-4 sm:mb-6 text-primary">Tens un projecte similar?</h2>
        <p class="text-accent-hover mb-6 sm:mb-8 max-w-2xl mx-auto text-sm sm:text-base">
          Si t'ha inspirat aquest projecte i tens una idea similar, parlarem sobre com podem fer realitat la teva visió.
        </p>
        <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
          <a href="/ca/#contact" class="btn-tertiary px-6 sm:px-8 py-3 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm sm:text-base">
            Parlem del teu projecte
          </a>
          <a href="/ca/portfolio" class="btn-outline px-6 sm:px-8 py-3 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm sm:text-base">
            Veure més projectes
          </a>
          <a 
            href="/ca/" 
            class="inline-flex items-center justify-center px-6 sm:px-8 py-3 rounded-full btn-outline-leopard font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm sm:text-base"
          >
            <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Tornar a l'inici
          </a>
        </div>
      </div>
    </section>

    <!-- Lightbox Component -->
    <Lightbox 
      client:load
      images={JSON.stringify(item.gallery || [])}
      project-title={item.title}
    />
  </main>
</Layout>

<script>
  // Simple lightbox functionality using custom events
  document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded, setting up gallery click handlers');
    
    const galleryItems = document.querySelectorAll('.gallery-item');
    console.log('Found gallery items:', galleryItems.length);
    
    galleryItems.forEach((item, idx) => {
      item.addEventListener('click', function(this: HTMLElement) {
        const index = parseInt(this.getAttribute('data-gallery-index') || '0');
        console.log('Gallery item clicked, index:', index);
        
        // Dispatch custom event to lightbox component
        const lightboxEvent = new CustomEvent('openLightbox', {
          detail: { index: index }
        });
        console.log('Dispatching lightbox event with index:', index);
        document.dispatchEvent(lightboxEvent);
      });
    });

    // Listen for lightbox close events
    document.addEventListener('closeLightbox', function() {
      console.log('Lightbox close event received');
      // The lightbox component will handle its own visibility
    });
  });
</script>

<style>
  .portfolio-detail {
    min-height: 100vh;
  }
  
  .hero-header {
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    margin-top: 0; /* Account for fixed navbar */
    padding-top: 8rem; /* Extra space for navbar */
  }
  
  .btn-tertiary {
    background-color: var(--color-tertiary);
    color: var(--color-primary);
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }
  
  .btn-tertiary:hover {
    background-color: var(--color-tertiary-hover);
  }
  
  .btn-outline {
    border: 2px solid var(--color-primary);
    color: var(--color-primary);
    background-color: transparent;
    text-decoration: none;
    display: inline-flex;
    text-align: center;
    align-items: center;
  }
  
  .btn-outline:hover {
    background-color: var(--color-primary);
    color: white;
  }
  
  /* Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }
  
  /* Ensure content doesn't hide behind navbar */
  .portfolio-detail {
    padding-top: 0;
  }
</style>

<script>
  // Use a flag to prevent duplicate initialization
  if (!(window as any).portfolioGalleryInitialized) {
    (window as any).portfolioGalleryInitialized = true;
    
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Portfolio detail page loaded');
      
      // Remove any existing listeners first
      const existingItems = document.querySelectorAll('.gallery-item');
      existingItems.forEach(item => {
        const newItem = item.cloneNode(true);
        if (item.parentNode) {
          item.parentNode.replaceChild(newItem, item);
        }
      });
      
      // Add click listeners to gallery items
      const galleryItems = document.querySelectorAll('.gallery-item');
      console.log('Found gallery items:', galleryItems.length);
      
      galleryItems.forEach((item, index) => {
        item.addEventListener('click', function(event) {
          event.preventDefault();
          event.stopPropagation();
          console.log('Gallery item clicked:', index);
          
          // Dispatch custom event to open lightbox
          const lightboxEvent = new CustomEvent('openLightbox', {
            detail: { index: index }
          });
          document.dispatchEvent(lightboxEvent);
        }, { once: false });
      });
    });
  }
</script>

<!-- Lightbox Component -->
<Lightbox client:only="vue" images={JSON.stringify(item.gallery || [])} projectTitle={item.title} />

<style>
  /* Ensure the main container allows proper sticky behavior */
  .portfolio-detail {
    position: relative;
    min-height: 100vh;
    overflow: visible;
  }
  
  .hero-header {
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    margin-top: 0;
    padding-top: 4rem;
  }
  
  .btn-tertiary {
    background-color: var(--color-tertiary);
    color: var(--color-primary);
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }
  
  .btn-tertiary:hover {
    background-color: var(--color-tertiary-hover);
  }
  
  .btn-outline {
    border: 2px solid var(--color-primary);
    color: var(--color-primary);
    background-color: transparent;
    text-decoration: none;
    display: inline-flex;
    text-align: center;
    align-items: center;
  }
  
  .btn-outline:hover {
    background-color: var(--color-primary);
    color: white;
  }
  
  html {
    scroll-behavior: smooth;
  }
  
  .portfolio-detail {
    padding-top: 0;
  }
</style>

</Layout>